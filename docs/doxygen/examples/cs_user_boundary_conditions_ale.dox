/*============================================================================
 * code_saturne documentation page
 *============================================================================*/

/*
  This file is part of code_saturne, a general-purpose CFD tool.

  Copyright (C) 1998-2024 EDF S.A.

  This program is free software; you can redistribute it and/or modify it under
  the terms of the GNU General Public License as published by the Free Software
  Foundation; either version 2 of the License, or (at your option) any later
  version.

  This program is distributed in the hope that it will be useful, but WITHOUT
  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  details.

  You should have received a copy of the GNU General Public License along with
  this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
  Street, Fifth Floor, Boston, MA 02110-1301, USA.
*/

/*-----------------------------------------------------------------------------*/

/*!

  \page cs_user_boundary_conditions_examples_ale Examples of data settings for ALE boundary conditions (cs_user_boundary_conditions.c)

 \brief User subroutine dedicated the use of ALE (Arbitrary Lagrangian
 Eulerian) Method:
  - Fills boundary condition types (\c ale_bc_type, \c impale)
    and codes(\c icodcl, \c rcodcl) for mesh velocity.
  - This function also enables one to fix displacement on nodes.

 \section intro_ale Introduction

 Here one defines boundary conditions for the deforming mesh on a per-face basis.

 Detailed explanations will be found in the theory guide.

 \section bc_types_ale Boundary condition types

 Boundary conditions may be assigned in two ways.

 \subsection std_bcs_ale For "standard" boundary conditions

 One defines a code in the \c ale_bc_type array (of dimensions number of
 boundary faces). The available codes are:

 - \c ale_bc_type[face_id] = \ref CS_BOUNDARY_ALE_FIXED: the face \c face_id
   is considered to be motionless. A zero Dirichlet boundary condition is
   automatically imposed on the mesh velocity. Moreover the displacement of
   corresponding vertices will automatically be set to 0, unless the user has
   modified the \c icodcl condition of the mesh velocity component.

 - \c ale_bc_type[face_id] = \ref CS_BOUNDARY_ALE_SLIDING: The mesh slides on
   the corresponding face \c face_id. The normal component of the mesh velocity
   is automatically set to 0. A homogeneous Neumann condition is automatically
   prescribed for the other components, as is the case for "Symmetry" fluid condition.

 - \c ale_bc_type[face_id] = \ref CS_BOUNDARY_ALE_IMPOSED_VEL: the mesh velocity
   is imposed on face \c face_id. Thus, the mesh velocity's
   \c bc_coeffs->rcodcl1 values arrays need to be set.

 \subsection non_std_bc_ale For "non-standard" conditions

 The value of \c icodcl for the "mesh_velocity" field's `bc_coeffs` structure
 is taken from the following:
  - 1: Dirichlet
  - 3: Neumann
  - 4: Symmetry

 The values of the 3 \c rcodcl components are:
  - \c rcodcl1[face_id]:
     Dirichlet for the variable if \c icodcl[face_id] = 1
     The dimension of \c rcodcl1[face_id] is in \f$m \cdot s^{-1}\f$
  - \c rcodcl2[face_id]:
    "exterior" exchange coefficient; mmake no sense for the mesh velocity,
    so can be ignored.

  - \c rcodcl3[face_id]:
    Flux density (in \f$kg \cdot m \cdot s^2\f$) = J if icodcl[face_id] = 3
                 (<0 if gain, n outwards-facing normal)
    \f$ rcodcl3[face_id] = -(mesh_viscosity) \grad {Um}.\vect{n} \f$
              \f$(Um\f$ represents mesh velocity)

    - \c rcodcl3[face_id] = 0. enables one to specify a homogeneous
      Neuman condition on mesh velocity. Any other value make no sense
      in this context.

 If the user assigns a value to \c ale_bc_type equal to
 \ref CS_BOUNDARY_ALE_FIXED, \ref CS_BOUNDARY_ALE_SLIDING, or
 \ref CS_BOUNDARY_ALE_IMPOSED_VEL and does not modify \c icodcl (zero value by
 default), \c ale_bc_type will define the boundary condition type.

 To the contrary, if the user prescribes \c icodcl[face_id] (nonzero) for
 the mesh velocity, the values assigned to rcodcl* will be used for the
 considered face.

 \subsection ug_ex_add_bc_ale Further ALE boundary condition elements

 The [Boundary conditions for ALE](@ref sec_ug_bc_ale_legacy)
 section of the user guide provides additional details.

 \section example_ale Example of ALE boundary conditions

Here is the list of examples:

  \subpage example_ale2
*/
//______________________________________________________________________________________
/*!

  \page example_ale2 Examples of ALE boundary conditions

  \section loc_var Mapping relative to ALE

  \snippet  cs_user_boundary_conditions_ale-base.c loc_var

  \section assign_ale Assign boundary conditions to boundary faces

  One may use selection criteria to filter boundary case subsets.\n
  Loop on faces from a subset.\n
  Set the boundary condition for each face.

  \subsection calculation_ale Calculation of displacement at current time step

  \snippet  cs_user_boundary_conditions_ale-base.c calcul

  \subsection example1_ale Example 1
  Example : For boundary faces of color 4 assign a fixed velocity

  \snippet  cs_user_boundary_conditions_ale-base.c example_1

  \subsection example2_ale Example 2
  Example: For boundary face of color 5 assign a fixed displacement on nodes

  \snippet  cs_user_boundary_conditions_ale-base.c example_2

  \subsection  example3_ale Example 3
  Example : For boundary faces of color 6 assign a sliding boundary

  \snippet  cs_user_boundary_conditions_ale-base.c  example_3

  \subsection  example4_ale Example 4
  Example : Prescribe elsewhere a fixed boundary

  \snippet  cs_user_boundary_conditions_ale-base.c example_4

*/
