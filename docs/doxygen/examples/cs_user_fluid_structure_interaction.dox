/*============================================================================
 * code_saturne documentation page
 *============================================================================*/

/*
  This file is part of code_saturne, a general-purpose CFD tool.

  Copyright (C) 1998-2024 EDF S.A.

  This program is free software; you can redistribute it and/or modify it under
  the terms of the GNU General Public License as published by the Free Software
  Foundation; either version 2 of the License, or (at your option) any later
  version.

  This program is distributed in the hope that it will be useful, but WITHOUT
  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  details.

  You should have received a copy of the GNU General Public License along with
  this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
  Street, Fifth Floor, Boston, MA 02110-1301, USA.
*/

/*----------------------------------------------------------------------------*/

/*!
  \page cs_user_fluid_structure_interaction Fluid Structure Interaction

  \section cs_user_fluid_structure_interaction_h_intro Introduction

  This page provides code blocks of several examples that may be used
  to perform [Fluid-Structure Interaction (FSI)](@ref cs_ug_as_fsi) computations.

  \section cs_user_model_h_coupling_add Declaring mobile structures.

  In addition to implicit declarations with boundary conditions in the GUI,
  internal structures may be declared in the \ref cs_user_model
  or \ref cs_user_parameters function. For example, to declare 3 coupled
  structures:

  \code{.c}
  cs_mobile_structures_add_n_structures(3);
  \endcode

  Coupling with code_aster can be declared in a similar manner, using:

  \code{.c}
  cs_ast_coupling_add();
  \endcode

  \section cs_user_model_h_coupling_zone Selecting coupled faces.

  Whether coupled structures are defined using the GUI or as above
  function, their association with boundary zones may be completed or
  modified in the \ref cs_user_fsi_structure_num function from
  the \ref cs_user_fluid_structure_interaction.c file.

  In the following example, 2 different structures are each associated to
  a boundary group:

  \snippet cs_user_fluid_structure_interaction.c fsi_i_str_num

  This type of association is not necessary using the GUI in simple cases,
  but could be used to associate multiple boundary zones to a common structure
  for example, or conversely, associated different structures to different
  portions of a given zone (for example, if a single zone contains multiple
  tubes, so as to simplify fluid BC definitions, separate structures could
  be associated to each tube using sub-selections).

  In the next example, the same face groups are coupled with an external
  (code_aster) structure.

  \snippet cs_user_fluid_structure_interaction-code_aster.c fsi_ext_struct_example

  Note that in this case, only the (negative) sign of the structure number is
  used, not the actual number, so both groups of faces are coupled to the
  same code_aster instance.

  \section cs_user_fluid_structure_interaction_h_internal  Internal structure parameters

  Various global and individual parameters associated to internal structures can
  be controlled with functions from \ref cs_user_fluid_structure_interaction.c.

  \subsection cs_user_fluid_structure_interaction_h_usstr1_ex_1 Initial positions and parameters

  Initial positions and other parameters associated with internal structure coupling
  may be defined using the \ref cs_user_fsi_structure_define function.

  For each internal structure one can here define:
  - an initial velocity \c vstr0
  - an initial displacement \c xstr0 (i.e. \c xstr0 is the value of the
    displacement \ref xstr compared to the initial mesh at time t=0)
  - a displacement compared to equilibrium \c xstreq.  \c xstreq is the
    initial displacement of the internal structure compared to its position
    at equilibrium; at each time step t and for a displacement \c xstr(t),
    the associated internal structure will be subjected to a force due to the spring:
    \f[
       -k (xstr(t)+xstreq).
    \f]

  When starting a calculation using ALE, or re-starting a calculation with
  ALE basing on a first calculation without ALE, an initial iteration 0 is
  automatically calculated in order to take initial arrays \c xstr0, \c vstr0 and
  \c xstreq into account. In another case, set the following option
  \code{.c}
  cs_glob_ale_need_init = 1;
  \endcode
  in the \ref cs_user_parameters function, so that the code can deal with arrays
  \c xstr0, \c vstr0 or \c xstreq.

  Note that \c xstr0, \c xstreq and \c vstr0 arrays are initialized at the beginning
  of the calculations to the value of 0.

  In the following example:
  - internal structure 0 has got an initial displacement \c xstr0 of 2 meters in
    the y direction and a displacement compared to equilibrium \c xstreq of
    1 meter in the y direction.
  - Initial velocity \c vstr0 in the z direction of structure 1 equals -0.5 m/s.

  \snippet cs_user_fluid_structure_interaction.c fsi_i_ex_a

  Here one can modify the values of the prediction coefficients for
  displacements and fluid forces in internal FSI coupled algorithm.

  The use of these coefficients is reminded here:
  - predicted displacement
    \f[
    \vect{X_{n+1}} = \vect{X_n} + aexxst \Delta t \vect{X^{\prime}_n} +
    bexxst \Delta t (\vect{X^{\prime}_n}-\vect{X^{\prime}_{n-1}})
    \f]
    with \f$ \vect{X_n} \f$ standing for the displacement at iteration \f$ n \f$,
    \f$ \vect{X^{\prime}_n} \f$ and \f$ \vect{X^{\prime}_{n-1}} \f$ representing the internal
    structure velocity respectively at iteration \f$ n \f$ and \f$ n-1 \f$.
  - fluid force sent to structure internal solver
    \f[
    \vect{F_{n+1}} = cfopre \vect{F_n} + (1-cfopre) \vect{F_{n-1}}
    \f]
    \f$ \vect{F_n} \f$ and \f$ \vect{F_{n-1}} \f$ standing for the fluid force acting on the
    structure respectively at iteration \f$ n \f$ and \f$ n-1 \f$.

  The following code snippet redefines theses advanced coefficients for predicted
  displacements and predicted force:

  \snippet cs_user_fluid_structure_interaction.c fsi_i_ex_b

  The time plotting behavior of internal structures may also be modified
  in this same function.
  The following example shows how the default output format and interval
  may be modified:

  \snippet cs_user_fluid_structure_interaction.c fsi_i_ex_c

  The output interval is based on a standard \ref cs_time_control_t logic,
  so time-based or more advanced user-defined behavior may de used here.
  It is recommended not to use a too large interval, so that sampling does
  not miss important signal characteristics.

  Note also that the movement of the internal fluid structure is computed using
  a Newmark method, whose parameters can also be modified by calling the
  \ref cs_mobile_structures_set_newmark_coefficients function.

  \subsection cs_user_fluid_structure_interaction_h_usstr1_ex_2 Structural parameters

  Some internal structure parameters, although usually fixed, may be time-varying
  in complex models, so they may be defined and changed using the
  \ref cs_user_fsi_structure_values function, which is called at each time
  step when internal mobile structures are present.

  For each internal structure one defines here:
  - its mass \f$ \tens{M} \f$ (\c xmstru)
  - its friction coefficient \f$ \tens{C} \f$ (\c xcstru)
  - its stiffness \f$ \tens{K} \f$ (\c xkstru)

  The \c forstr array stores fluid stresses acting on each internal structure.
  Moreover it is possible to take external forces (gravity for example) into
  account, too.

  The \c xstr array indicates the displacement of each structure compared to its
  position in the initial mesh.

  The \c xstr0 array gives the displacement of the structures in initial mesh
  compared to structure equilibrium.

  The \c vstr array contains the structure velocities.

  The \c xstr, \c xstr0, and \c vstr arrays are data tables that can be used to define
  arrays mass, friction and stiffness. THOSE ARE NOT TO BE MODIFIED.

  The 3D structure equation that is solved is:
  \f[
    \tens{M} \vect{X^{\prime\prime}} + \tens{C} \vect{X^{\prime}} + \tens{K} (\vect{X}+\vect{X_0}) = \vect{F}
  \f]
  where \f$\vect{X}\f$ stands for the structural displacement compared to initial mesh position (\c xstr) and \f$\vect{X_0}\f$ represents the displacement of the structure in the initial mesh compared to equilibrium.

  Note that \f$\tens{M}\f$, \f$\tens{C}\f$ and \f$\tens{K}\f$ are 3x3 matrices.

  This equation is solved using a Newmark HHT algorithm.
  Note that the time step used to solve this equation (\c dtstr) can be
  different from the one of fluid calculations. user is free to define
  \c dtstr array. At the beginning of the calculation \c dtstr is
  initialized to the value of \c dt (fluid time step).

  \subsubsection cs_user_fluid_structure_interaction_h_usstr2_example_1 Example 1

  Two examples of definition of the mass, the friction coefficient and the stiffness
  of an internal structure are provided hereafter.

  \snippet cs_user_fluid_structure_interaction.c fsi_i_ex_d

  \subsubsection cs_user_fluid_structure_interaction_h_usstr2_example_2 Example 2

  \snippet cs_user_fluid_structure_interaction.c fsi_i_ex_e

  \section cs_user_fluid_structure_interaction_h_usaste Fluid Structure external coupling with code_aster

  For code_aster coupling, it is sufficient to declare a coupling as described in
  the earlier \ref cs_user_model_h_coupling_add "section"
  and possibly \ref cs_user_model_h_coupling_zone "select associated faces".

  Currently, multiple structures associated to faces associated with
  code_aster are handled in a grouped manner,so the structure number
  has no importance, as long as it is negative. In the future, in case
  of coupling with multiple instances of code_aster, we could assign
  different structures to different coupling instances.

*/
